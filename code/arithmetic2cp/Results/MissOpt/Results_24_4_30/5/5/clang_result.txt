Inconsistence is detected, dst_optimized 0, src_optimized 1
Variable line: 10    Expression line: 11
src after transformed:=============================
unsigned short var_20;
bool var_37;
long long int  Optimized_Mark1, Variable_Static;
 
/*
yarpgen version 2.0 0
Seed 4
Invocation /home/zy/OptChecker/yarpgen/build/yarpgen o /home/zy/OptChecker/test_yarpgen
*/
#include "init.h"
#include <algorithm>
void fn1(bool var_0,   bool var_3,   long long int var_6,  short var_8) 
    {
long long int  Variable_T = 0; var_6 = 0 + Optimized_Mark1;
Variable_Static = std::max((/* implicit */long long int) std::min(std::max(var_20, (unsigned short)7), (/* implicit */unsigned short) var_8), std::min(std::max(var_6, (/* implicit */long long int) 2), (/* implicit */long long int) std::max((/* implicit */int) var_37, 0))); var_6 = Variable_T;
    }
 
dst after transformed:=============================
unsigned short var_20;
bool var_37;
long long int  Optimized_Mark2, Variable_Mark1, Variable_Mark2;
 
/*
yarpgen version 2.0 0
Seed 4
Invocation /home/zy/OptChecker/yarpgen/build/yarpgen o /home/zy/OptChecker/test_yarpgen
*/
#include "init.h"
#include <algorithm>
void fn1(bool var_0,   bool var_3,   long long int var_6,  short var_8) 
    {
        var_6 = 0;
if((std::max((/* implicit */long long int) std::min(std::max(var_20, (unsigned short)7), (/* implicit */unsigned short) var_8), std::min(std::max(Variable_Mark1, (/* implicit */long long int) 2), (/* implicit */long long int) std::max((/* implicit */int) var_37, 0))))-(std::max((/* implicit */long long int) std::min(std::max(var_20, (unsigned short)7), (/* implicit */unsigned short) var_8), std::min(std::max(Variable_Mark2, (/* implicit */long long int) 2), (/* implicit */long long int) std::max((/* implicit */int) var_37, 0))))){Optimized_Mark2=1;}
    }
 
